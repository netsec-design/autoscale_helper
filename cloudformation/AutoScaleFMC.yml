AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Network Template: Sample template that creates a VPC, deploys an FMC to that and establish TGW peering as defined in Lab Module 3a

# This template creates:
#   VPC
#   Internet Gateway
#   MGMT Route Table
#   MGMT Subnet
#   Transit Gateway



######################
# Parameters section
######################

Parameters:

  PodName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: POD1

  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: AutoScale-Network

  FMCAMI:
    Description: >-
      AMI ID of the FMC instance - default is in North Virginia - US East 1 region - BYOL
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: ami-020790e9a294ea856

  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-16
    Description: CIDR block of VPC
    Type: String
    Default: 10.1.0.0/16

######################
# Resources section
######################

Resources:

  ## VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VPCCIDR
      Tags:
       - Key: Name
         Value: !Sub ${PodName}-AutoScaleFMC

 #Internet Gateway
  AutoScaleFMCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${PodName}-VPC-AutoScale-FMC-IGW

  IGWVPCAttachment:        
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref AutoScaleFMCIGW
      VpcId: !Ref VPC

  ## MGMT Route Table
  MGMTRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: !Sub ${PodName}-AutoScale FMC Spoke MGMT Route Table

  ## MGMT Subnet
  MGMTSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
       - Key: Name
         Value: !Sub ${PodName}-AutoScale FMC Spoke MGMT Subnet A
      VpcId: !Ref VPC
      CidrBlock: !Select [ 100, !Cidr [ !GetAtt VPC.CidrBlock, 256, 8 ]]
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region

  ## Subnet associations - we need to associate the subnets with their respective route tables
  MGMTSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MGMTSubnet
      RouteTableId: !Ref MGMTRouteTable

  DefaultRouteMGMT:
    Type: AWS::EC2::Route
    DependsOn: IGWVPCAttachment
    Properties:
      RouteTableId: !Ref MGMTRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AutoScaleFMCIGW

  SpecificRouteMGMT:
    Type: AWS::EC2::Route
    DependsOn: VPCAttachment3a
    Properties:
      RouteTableId: !Ref MGMTRouteTable
      DestinationCidrBlock:
        Fn::ImportValue: 
          !Sub ${NetworkStackName}-VPCCIDR      
      TransitGatewayId: !Ref TransitGateway

  SpecificRouteMGMT1a:
    Type: AWS::EC2::Route
    DependsOn: VPCAttachment3a
    Properties:
      RouteTableId:
        Fn::ImportValue: 
          !Sub ${NetworkStackName}-MGMTRouteTable
      DestinationCidrBlock: !GetAtt VPC.CidrBlock
      TransitGatewayId: !Ref TransitGateway

## Create transit gateway to establish connectivity with the VPC created in Module 1a
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AmazonSideAsn: 64512
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: disable
      DefaultRouteTablePropagation: disable
      Description: A transit gateway inter-connects different VPCs
      Tags: 
      - Key: Name
        Value: !Sub ${PodName}-${AWS::StackName}-TGW

  TGWRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      Tags:
       - Key: Name
         Value: Security Route Table
      TransitGatewayId: !Ref TransitGateway

  TGWRouteTableAssociation1:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref VPCAttachment1b
      TransitGatewayRouteTableId: !Ref TGWRouteTable

  TGWRouteTableAssociation2:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref VPCAttachment3a
      TransitGatewayRouteTableId: !Ref TGWRouteTable

  TGWRouteTablePropagation1:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref VPCAttachment1b
      TransitGatewayRouteTableId: !Ref TGWRouteTable

  TGWRouteTablePropagation2:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref VPCAttachment3a
      TransitGatewayRouteTableId: !Ref TGWRouteTable

## Creating VPC attachments to Transit Gateway for VPC in Module 1 and VPC in Module 3
  VPCAttachment1b:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - Fn::ImportValue: !Sub ${NetworkStackName}-TGWSubnetA
        - Fn::ImportValue: !Sub ${NetworkStackName}-TGWSubnetB
      Tags:
      - Key: Name
        Value: !Sub ${PodName}-AutoScale-VPC-Attachment
      TransitGatewayId: !Ref TransitGateway
      VpcId: 
        Fn::ImportValue: 
          !Sub ${NetworkStackName}-VPCID

  VPCAttachment3a:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref MGMTSubnet
      Tags:
      - Key: Name
        Value: !Sub ${PodName}-FMC-MGMT-VPCAttachment
      TransitGatewayId: !Ref TransitGateway
      VpcId: !Ref VPC

#FMC Instance definition
  FMCSpokeInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: c5.4xlarge
      ImageId: !Ref FMCAMI
      KeyName: aws-cloudedge
      NetworkInterfaces:
        - GroupSet:
            - !Ref FMCSecurityGroup
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref MGMTSubnet
      Tags:
        - Key: Name
          Value: !Sub ${PodName}-Spoke-FMC

  #Security Group FMC
  FMCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable FMC related comms
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8305
          ToPort: 8305
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${PodName}-Spoke FMC Security Group
######################
# Outputs section
######################

Outputs:
  
  MGMTSubnet:
    Description: The subnet ID to use for public web servers
    Value: !Ref MGMTSubnet
    Export:
      Name: !Sub '${AWS::StackName}-SubnetID'

  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'

  TGW:
    Description: TGW ID
    Value: !Ref TransitGateway
    Export:
      Name: !Sub '${AWS::StackName}-TGWID'

  VPCAttachment:
    Description: VPC Attachment ID
    Value: !Ref VPCAttachment1b
    Export:
      Name: !Sub '${AWS::StackName}-VPCAttachment'

  TGWRouteTable:
    Description: TGW Security Route Table ID
    Value: !Ref TGWRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-TGWRouteTable'

  FMCURL:
    Description: URL of the FMC UI
    Value: !Sub 'https://${FMCSpokeInstance.PublicDnsName}'

  FMCIP:
    Description: Public IP of the FMC
    Value: !GetAtt FMCSpokeInstance.PublicIp

  FMCSSHTerminal:
    Description: SSH to FMC
    Value: !Sub 'ssh -i cloud-edge admin@${FMCSpokeInstance.PublicIp}'